{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "websiteUrl": {
      "type": "string",
      "metadata": {
        "description": "Website URL"
      }
    },
    "eventGridDomainName": {
      "type": "string",
      "metadata": {
        "description": "Name for Event Grid"
      }
    },
    "eventGridConnector": {
      "type": "string",
      "metadata": {
        "description": "API Connector Name for Event Grid"
      }
    },
    "sqlConnector": {
      "type": "string",
      "metadata": {
        "description": "API Connector Name for SQL"
      }
    },
    "o365Connector": {
      "type": "string",
      "metadata": {
        "description": "API Connector Name for O365"
      }
    }
  },
  "variables": {
    "logicAppEventGridTopic": "[concat('/subscriptions/', uriComponent(subscription().subscriptionId), '/resourceGroups/', uriComponent(resourceGroup().name), '/providers/Microsoft.EventGrid/domains/', parameters('eventGridDomainName'))]",
    "invitationSendEmailLogicApp": {
      "name": "[concat('Invitation_SendEmail', '_', take(uniqueString(resourceGroup().id, deployment().name), 4))]",
      "triggerPath": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.EventGrid.Domains'')}/resource/eventSubscriptions')]"
    },
    "importBatchProcessingBeganLogicApp": {
      "name": "[concat('ImportBatch_ProcessingBegan_SendEmail', '_', take(uniqueString(resourceGroup().id, deployment().name), 4))]",
      "triggerPath": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.EventGrid.Domains'')}/resource/eventSubscriptions')]"
    },
    "importBatchIndexedLogicApp": {
      "name": "[concat('ImportBatch_Indexed_SendEmail', '_', take(uniqueString(resourceGroup().id, deployment().name), 4))]",
      "triggerPath": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.EventGrid.Domains'')}/resource/eventSubscriptions')]"
    },
    "importBatchErroredLogicApp": {
      "name": "[concat('ImportBatch_Errored_SendEmail', '_', take(uniqueString(resourceGroup().id, deployment().name), 4))]",
      "triggerPath": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.EventGrid.Domains'')}/resource/eventSubscriptions')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('invitationSendEmailLogicApp').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "splitOn": "@triggerBody()",
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                  }
                },
                "body": {
                  "properties": {
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Ida.Core.Domain.Invitations.DomainEvents.Sent"
                      ]
                    },
                    "topic": "[variables('logicAppEventGridTopic')]"
                  }
                },
                "path": "[variables('invitationSendEmailLogicApp').triggerPath]",
                "queries": {
                  "x-ms-api-version": "2017-09-15-preview"
                }
              }
            }
          },
          "actions": {
            "Initialize_CompleteInvitationUrl": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "CompleteInvitationUrl",
                    "type": "String",
                    "value": "[concat(parameters('websiteUrl'), '/Register?InvitationId=@{body(''Parse_JSON'')[''DomainEvent''][''InvitationId''][''Value'']}')]"
                  }
                ]
              }
            },
            "Initialize_EmailBody": {
              "runAfter": {
                "Initialize_FromEmail": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "EmailBody",
                    "type": "String",
                    "value": "<html>\n<head>\n    <style>\n        .banner-color {\n            background-color: #eb681f;\n        }\n\n        .title-color {\n            color: #0066cc;\n        }\n\n        .button-color {\n            background-color: #0066cc;\n        }\n\n        @media screen and (min-width: 500px) {\n            .banner-color {\n                background-color: #0066cc;\n            }\n\n            .title-color {\n                color: #eb681f;\n            }\n\n            .button-color {\n                background-color: #eb681f;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div style=\"background-color:#ececec;padding:0;margin:0 auto;font-weight:200;width:100%!important\">\n        <table align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"table-layout:fixed;font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n            <tbody>\n                <tr>\n                    <td align=\"center\">\n                        <center style=\"width:100%\">\n                            <table bgcolor=\"#FFFFFF\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:0 auto;max-width:512px;font-weight:200;width:inherit;font-family:Helvetica,Arial,sans-serif\" width=\"512\">\n                                <tbody>\n                                    <tr>\n                                        <td align=\"left\">\n                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td width=\"100%\">\n                                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td align=\"center\" bgcolor=\"#8BC34A\" style=\"padding:20px 48px;color:#ffffff\" class=\"banner-color\">\n                                                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                                                <tbody>\n                                                                                    <tr>\n                                                                                        <td align=\"center\" width=\"100%\">\n                                                                                            <h1 style=\"padding:0;margin:0;color:#ffffff;font-weight:500;font-size:20px;line-height:24px\">Microsoft Ida</h1>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td align=\"center\" style=\"padding:20px 0 10px 0\">\n                                                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                                                <tbody>\n                                                                                    <tr>\n                                                                                        <td align=\"center\" width=\"100%\" style=\"padding: 0 15px;text-align: justify;color: rgb(76, 76, 76);font-size: 12px;line-height: 18px;\">\n                                                                                            <!-- <h3 style=\"font-weight: 600; padding: 0px; margin: 0px; font-size: 16px; line-height: 24px; text-align: center;\" class=\"title-color\">Hi{{Name}},</h3> -->\n                                                                                            <p style=\"margin: 20px 0 30px 0;font-size: 15px;text-align: center;\">@{variables('FromEmail')} wants to collaborate with you</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p style=\"margin: 20px 0 30px 0;font-size: 15px;text-align: center;\">@{body('Parse_JSON')['DomainEvent']['Message']['Value']}</p>\n                                                                                            <div style=\"font-weight: 200; text-align: center; margin: 25px;\"><a style=\"padding:0.6em 1em;border-radius:600px;color:#ffffff;font-size:14px;text-decoration:none;font-weight:bold\" class=\"button-color\" href=\"@{variables('CompleteInvitationUrl')}\">Accept Invitation</a></div>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </td>\n                                                                    </tr>\n                                                                    <tr></tr>\n                                                                    <tr></tr>\n                                                                </tbody>\n                                                            </table>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align=\"left\">\n                                            <table bgcolor=\"#FFFFFF\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"padding:0 24px;color:#999999;font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td align=\"center\" width=\"100%\">\n                                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td align=\"center\" valign=\"middle\" width=\"100%\" style=\"border-top:1px solid #d9d9d9;padding:12px 0px 20px 0px;text-align:center;color:#4c4c4c;font-weight:200;font-size:12px;line-height:18px\">\n                                                                            Regards,\n                                                                            <br><b>The Project Ida Team</b>\n                                                                        </td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            </table>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td align=\"center\" width=\"100%\">\n                                                            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"font-weight:200;font-family:Helvetica,Arial,sans-serif\" width=\"100%\">\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td align=\"center\" style=\"padding:0 0 8px 0\" width=\"100%\"></td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            </table>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </center>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</body>\n</html>"
                  }
                ]
              }
            },
            "Initialize_FromEmail": {
              "runAfter": {
                "Initialize_ToEmail": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "FromEmail",
                    "type": "String",
                    "value": "@{body('Parse_JSON')['DomainEvent']['From']['Value']}"
                  }
                ]
              }
            },
            "Initialize_ToEmail": {
              "runAfter": {
                "Initialize_CompleteInvitationUrl": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ToEmail",
                    "type": "String",
                    "value": "@{body('Parse_JSON')['DomainEvent']['To']['Value']}"
                  }
                ]
              }
            },
            "Parse_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['data']",
                "schema": {}
              }
            },
            "Send_an_email": {
              "runAfter": {
                "Initialize_EmailBody": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "Body": "@variables('EmailBody')",
                  "IsHtml": true,
                  "Subject": "Project Ida Invitation",
                  "To": "@variables('ToEmail')"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Mail"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureeventgrid": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventGridConnector'))]",
                "connectionName": "[parameters('eventGridConnector')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('o365Connector'))]",
                "connectionName": "[parameters('o365Connector')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('importBatchProcessingBeganLogicApp').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "splitOn": "@triggerBody()",
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "properties": {
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Ida.Core.Domain.ImportBatches.DomainEvents.ProcessingBegan"
                      ]
                    },
                    "topic": "[variables('logicAppEventGridTopic')]"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                  }
                },
                "path": "[variables('importBatchProcessingBeganLogicApp').triggerPath]",
                "queries": {
                  "x-ms-api-version": "2017-06-15-preview"
                }
              }
            }
          },
          "actions": {
            "Execute_stored_procedure": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "pImportBatchId": "@body('Parse_JSON')?['DomainEvent']?['ImportBatchId']?['Value']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[core].[spSendProcessingBeganEmailData]'))}"
              }
            },
            "For_each": {
              "foreach": "@body('Execute_stored_procedure')?['resultsets']?['Table1']",
              "actions": {
                "Send_an_email": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "Body": "Your Processing Has Began",
                      "Subject": "Processing Has Began",
                      "To": "@items('For_each')?['Email']"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Mail"
                  }
                }
              },
              "runAfter": {
                "Execute_stored_procedure": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['data']",
                "schema": {
                  "properties": {
                    "DomainEvent": {
                      "properties": {
                        "DatasetId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "DomainEventId": {
                          "type": "string"
                        },
                        "ImportBatchId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "Tags": {
                          "items": {
                            "properties": {
                              "Value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "Value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "Metadata": {
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureeventgrid": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventGridConnector'))]",
                "connectionName": "[parameters('eventGridConnector')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('o365Connector'))]",
                "connectionName": "[parameters('o365Connector')]"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sqlConnector'))]",
                "connectionName": "[parameters('sqlConnector')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('importBatchIndexedLogicApp').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "splitOn": "@triggerBody()",
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "properties": {
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Ida.Core.Domain.ImportBatches.DomainEvents.Indexed"
                      ]
                    },
                    "topic": "[variables('logicAppEventGridTopic')]"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                  }
                },
                "path": "[variables('importBatchIndexedLogicApp').triggerPath]",
                "queries": {
                  "x-ms-api-version": "2017-06-15-preview"
                }
              }
            }
          },
          "actions": {
            "Execute_stored_procedure": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "pImportBatchId": "@body('Parse_JSON')?['DomainEvent']?['ImportBatchId']?['Value']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[core].[spSendIndexedEmailData]'))}"
              }
            },
            "For_each": {
              "foreach": "@body('Execute_stored_procedure')?['resultsets']?['Table1']",
              "actions": {
                "Send_an_email": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "Body": "Your Indexing has finished.",
                      "Subject": "Indexing Complete",
                      "To": "@items('For_each')?['Email']"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Mail"
                  }
                }
              },
              "runAfter": {
                "Execute_stored_procedure": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['data']",
                "schema": {
                  "properties": {
                    "DomainEvent": {
                      "properties": {
                        "DatasetId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "DomainEventId": {
                          "type": "string"
                        },
                        "ImportBatchId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "Metadata": {
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureeventgrid": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventGridConnector'))]",
                "connectionName": "[parameters('eventGridConnector')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('o365Connector'))]",
                "connectionName": "[parameters('o365Connector')]"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sqlConnector'))]",
                "connectionName": "[parameters('sqlConnector')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('importBatchErroredLogicApp').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "splitOn": "@triggerBody()",
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "properties": {
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Ida.Core.Domain.ImportBatches.DomainEvents.Errored"
                      ]
                    },
                    "topic": "[variables('logicAppEventGridTopic')]"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                  }
                },
                "path": "[variables('importBatchErroredLogicApp').triggerPath]",
                "queries": {
                  "x-ms-api-version": "2017-06-15-preview"
                }
              }
            }
          },
          "actions": {
            "Execute_stored_procedure": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "pImportBatchId": "@body('Parse_JSON')?['DomainEvent']?['ImportBatchId']?['Value']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[core].[spSendErrorEmailData]'))}"
              }
            },
            "For_each": {
              "foreach": "@body('Execute_stored_procedure')?['resultsets']?['Table1']",
              "actions": {
                "Send_an_email": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "Body": "Your Processing Has Errored. Error: @{body('Parse_JSON')?['DomainEvent']?['Message']?['Value']}",
                      "Subject": "Processing Has Errored",
                      "To": "@items('For_each')?['Email']"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Mail"
                  }
                }
              },
              "runAfter": {
                "Execute_stored_procedure": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['data']",
                "schema": {
                  "properties": {
                    "DomainEvent": {
                      "properties": {
                        "DatasetId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "DomainEventId": {
                          "type": "string"
                        },
                        "ImportBatchId": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "Message": {
                          "properties": {
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "Metadata": {
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureeventgrid": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventGridConnector'))]",
                "connectionName": "[parameters('eventGridConnector')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('o365Connector'))]",
                "connectionName": "[parameters('o365Connector')]"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sqlConnector'))]",
                "connectionName": "[parameters('sqlConnector')]"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {    
  }
}